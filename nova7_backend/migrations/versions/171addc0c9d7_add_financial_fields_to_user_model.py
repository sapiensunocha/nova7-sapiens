"""Add financial fields to User model

Revision ID: 171addc0c9d7
Revises: 5c521f21310f
Create Date: 2025-07-11 20:00:49.417866

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '171addc0c9d7'
down_revision = '5c521f21310f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wallet_transaction')
    op.drop_table('marketplace_product')
    with op.batch_alter_table('money_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('sender_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('receiver_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('description', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('responded_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('money_request_recipient_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('money_request_requester_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['sender_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['receiver_id'], ['id'])
        batch_op.drop_column('recipient_id')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('requester_id')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('income_sources', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('expenses', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('debt', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('financial_goals', sa.String(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('financial_goals')
        batch_op.drop_column('debt')
        batch_op.drop_column('expenses')
        batch_op.drop_column('income_sources')

    with op.batch_alter_table('money_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('requester_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('recipient_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('money_request_requester_id_fkey'), 'user', ['requester_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('money_request_recipient_id_fkey'), 'user', ['recipient_id'], ['id'])
        batch_op.alter_column('amount',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
        batch_op.drop_column('responded_at')
        batch_op.drop_column('description')
        batch_op.drop_column('receiver_id')
        batch_op.drop_column('sender_id')

    op.create_table('marketplace_product',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('seller_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['seller_id'], ['user.id'], name=op.f('marketplace_product_seller_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('marketplace_product_pkey'))
    )
    op.create_table('wallet_transaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('stripe_payment_intent_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('related_transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('wallet_transaction_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('wallet_transaction_pkey')),
    sa.UniqueConstraint('stripe_payment_intent_id', name=op.f('wallet_transaction_stripe_payment_intent_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
